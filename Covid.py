# -*- coding: utf-8 -*-
"""User Input Unit6_FinalProjects_Group1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cbla2VjEwS3oK1rj7ik_W-6311V7YT7H

# Analyzing COVID-19 in the United States and Its Impact

Throughout the final unit we have explored COVID-19 and its spread throughout the world. 

The visualizations in this notebook will focus on and explore its impact on the United States.
"""

#Import all libraries you may need in this cell:
import pandas as pd 
import plotly.graph_objects as go
import matplotlib.pyplot as plt

"""## 1 - Finding the COVID-19 numbers per state."""

#3 lists of data compiled for your convenience

#List of states sorted in alphabetical order.
statesList = ["Alabama","Alaska","Arizona","Arkansas","California","Colorado",
  "Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois",
  "Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland",
  "Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana",
  "Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York",
  "North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania",
  "Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah",
  "Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]

#Corresponding latitudes for each state.
latitudes = [32.361538, 58.301935, 33.448457, 34.736009, 38.555605, 39.7391667, 41.767, 39.161921, 30.4518, 33.76,
            21.30895, 43.613739, 39.783250, 39.790942, 41.590939, 39.04, 38.197274, 30.45809, 44.323535, 38.972945,
            42.2352, 42.7335, 44.95,32.320, 38.572954,46.595805,40.809868,39.160949,43.220093, 40.221741,35.667231,
            42.659829,35.771, 48.813343,39.962245, 35.482309,44.931109, 40.269789, 41.82355, 34.000,  44.367966,36.165,
            30.266667,40.7547,44.26639, 37.54, 47.042418,38.349497,43.074722, 41.145548]

#Corresponding longitudes for each state.
longitudes = [-86.279118,-134.419740,-112.073844, -92.331122,-121.468926 ,-104.984167 ,-72.677 , -75.526755 ,
              -84.27277,-84.39,-157.826182 ,-116.237651 ,-89.650373 ,-86.147685 ,-93.620866 ,-95.69 , -84.86311
              ,-91.140229 ,-69.765261 ,-76.501157 ,-71.0275 ,-84.5467 , -93.094 ,-90.207 , -92.189283
              , -112.027031 ,-96.675345 ,-119.753877 ,-71.549127 , -74.756138, -105.964575 , -73.781339 ,-78.638 
              ,-100.779004 ,-83.000647 , -97.534994,-123.029159 ,-76.875613 , -71.422132, -81.035, -100.336378
              ,-86.784 ,-97.75 ,-111.892622 ,-72.57194 ,-77.46 ,-122.893077 ,-81.633294 ,-89.384444 ,-104.802042]
stateAbbreviationList = ["AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND",
"OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"]

df = pd.read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")

"""Use the New York Times' COVID-19 data(https://github.com/nytimes/covid-19-data/blob/master/us-states.csv) to create **two functions** that takes the name of a state as input and returns the bar plots of 1) # of cases over time and 2) # of deaths over time for that specific state."""

newdf = df.loc[:, ["date", "state", "cases"]]
newdf.head()

state = input("What state would you like to see COVID- 19 data from? (If you want all states choose ALL STATES)")
statedf = newdf.loc[df["state"] == state]

if state == "ALL STATES":
  dates = newdf["date"]
  cases = newdf["cases"]
else:
  datesa = statedf["date"]
  casesa = statedf["cases"]

fig = plt.figure(figsize = (15,5))
ax = fig.add_subplot(111)
ax.xaxis.set_major_locator(plt.MaxNLocator(5))
plt.plot(dates, cases)
plt.bar(dates, cases)
plt.xlabel("Date")
plt.ylabel("Number of Cases (millions)")
plt.title("COVID 19 Cases in " + state)
plt.show()

# """Call the functions on your assigned state to visualize the data."""

# def DeathsOverTime(State):
#   fig = plt.figure()
#   ax = fig.add_axes([0, 0, 2, 2])
#   ax.xaxis.set_major_locator(plt.MaxNLocator(5)) #7 axis ticks instead of all
#   dates = df["date"]
#   deaths = df["deaths"]
#   plt.plot(dates, deaths)
#   plt.bar(dates, deaths)
#   plt.xlabel("Deaths")
#   plt.ylabel("Number of Deaths(millions)")
#   plt.title("COVID 19 Deaths in " + State)
#   plt.show()
# DeathsOverTime("Washington")

# df = pd.read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")
# df.head()

# """Use New York Times' COVID-19 data(https://github.com/nytimes/covid-19-data/blob/master/us-states.csv) to create a choropleth map of the United States based on its numbers of COVID-19 cases and deaths. (Use colors that you think are appropriate)."""

# #Dataframe Formatter
# def dfFormatter(df, selectColumn):
#     #Separate df_formatted from df. Create list of states and their latitudes and longitudes.
#     df_formatted = pd.DataFrame(statesList, columns = ['state'])
#     df_formatted['lat'] = latitudes
#     df_formatted['long'] = longitudes
    
#     #Create columns for each date, start off by zeroing out everything.
#     #previousDate = datetime.datetime(2020, 1, 1) #Commented out because datetime is no longer a type.
#     previousDate = "2020-01-01"
#     for i in range(len(df['date'])):
#         if df['date'][i] != previousDate:
#             df_formatted[df['date'][i]] = 0

#     #Set index to states temporarily.
#     df_formatted.set_index('state', inplace=True)

    
#     #Select which data you want to use based on the column that you are plotting (cases or deaths)
#     if selectColumn == 'cases':
#         #Get number of cases from df and put them in df_formatted.  
#         for i in range(len(df['state'])):
#             df_formatted.loc[df['state'][i], df['date'][i]] = df['cases'][i]
#             #Format for .loc : df_formatted.loc['index/row label', 'column label'] = 'value'
#     elif selectColumn == 'deaths':
#         for i in range(len(df['state'])):
#             df_formatted.loc[df['state'][i], df['date'][i]] = df['deaths'][i]
#             #Format for .loc : df_formatted.loc['index/row label', 'column label'] = 'value'

    
#     #Reset index when done so that state becomes a column without being the index.
#     df_formatted.reset_index(inplace=True)
    
#     #Drop last 5 rows because we are focusing on the 50 states.
#     df_formatted.drop([50,51,52,53,54], inplace=True)
        
#     return df_formatted

# #Call the function and assign what it returns to the dataframe variables you will be using.
# nationalcases = dfFormatter(df, 'cases')
# nationalcases["state abbreviations"] = stateAbbreviationList

# nationaldeaths = dfFormatter(df, 'deaths')
# nationaldeaths["state abbreviations"] = stateAbbreviationList

# def ChoroplethMaker(date):
#   colors = ["#cce5ff", "#b3d7ff", "#99caff", "#80bdff", "#66b0ff", "#4da3ff", "#3396ff",
#           "#1a88ff", "#007bff", "#006fe6", "#0063cc", "#0056b3", "#004a99", "#003e80", 
#           "#003166", "#00254d", "#001933", "#000c1a", "#000000"]
#   fig = go.Figure(data = go.Choropleth(
#       locationmode = "USA-states",
#       locations = nationalcases['state abbreviations'],
#       z = nationalcases[date],
#       colorscale = colors,
#       ))
#   fig.update_layout(
#         title_text = "Total Nationwide COVID 19 cases (millions)",
#         geo = dict(
#             showcoastlines = True, coastlinecolor = "blue",
#             scope = "usa"
#         )
#         ) 
#   fig.show()
# ChoroplethMaker('2020-08-15')

# def ChoroplethMaker(date):
#   colors = ["#cce5ff", "#b3d7ff", "#99caff", "#80bdff", "#66b0ff", "#4da3ff", "#3396ff",
#           "#1a88ff", "#007bff", "#006fe6", "#0063cc", "#0056b3", "#004a99", "#003e80", 
#           "#003166", "#00254d", "#001933", "#000c1a", "#000000"]
#   fig = go.Figure(data = go.Choropleth(
#       locationmode = "USA-states",
#       locations = nationaldeaths['state abbreviations'],
#       z = nationaldeaths[date],
#       colorscale = colors,
#       ))
#   fig.update_layout(
#         title_text = "Total Nationwide COVID 19 Deaths (millions)",
#         geo = dict(
#             showcoastlines = True, coastlinecolor = "blue",
#             scope = "usa"
#         )
#         ) 
#   fig.show()
# ChoroplethMaker('2020-08-15')

# """## 2 - Analyzing Its Impact on the United States

# Group 1 - 

# The United States is experiencing record high unemployment numbers. 

# Using the following dataset from data.gov's data catalog(https://catalog.data.gov/dataset/unemployment-insurance-initial-claims-statewide-by-month-beginning-1971), create a bar plot of # of unemployment claims over time.
# """

# unemployment = pd.read_csv("")



# """## 3 - Challenge (optional): Find a dataset online that explores other ways that COVID-19 has impacted the United States and use pandas and Plotly to create a visualization based on it.

# Some ideas:
# * number of business closures in each state over time
# * number of people telecommuting in the US
# * number of hospitalizations in each state

# etc..
# """

